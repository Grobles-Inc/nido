---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en" data-theme="cupcake">
	<head>
		<BaseHead title={title} description={description} />
	</head>

	<body class="min-h-screen bg-base-100">
		<Header />
		<main class="container mx-auto px-4 py-8 lg:py-12">
			<article class="max-w-4xl mx-auto">
				{
					heroImage && (
						<div class="relative w-full h-[400px] mb-8 rounded-2xl overflow-hidden">
							<img src={heroImage} alt="" class="w-full h-full object-cover" />
							<div class="absolute inset-0 bg-gradient-to-t from-base-100/50 to-transparent" />
						</div>
					)
				}

				<div
					class="prose prose-lg max-w-none prose-headings:text-primary prose-headings:font-bold prose-p:text-gray-700 prose-img:rounded-xl prose-blockquote:bg-base-200 prose-blockquote:border-primary prose-blockquote:rounded-lg prose-blockquote:not-italic"
				>
					<div class="flex items-center gap-2 text-sm mb-4 not-prose">
						<span class="badge badge-primary">Blog</span>
						<span class="opacity-75">
							<FormattedDate date={pubDate} />
						</span>
						{
							updatedDate && (
								<span class="text-sm italic opacity-75">
									(Updated: <FormattedDate date={updatedDate} />)
								</span>
							)
						}
					</div>

					<h1 class="text-4xl lg:text-5xl mb-8 leading-tight">
						{title}
					</h1>

					<div class="divider my-8"></div>

					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
